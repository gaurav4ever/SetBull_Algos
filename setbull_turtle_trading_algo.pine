//@version=5
indicator("SetBull turtle trading strategy", overlay=true)

// --- CP1: 15-Min Range vs. ATR (1:2 Ratio) ---

// Step 1: Take previous day ATR (Average True Range)
atrPeriod = 14
prevATR = request.security(syminfo.tickerid, "D", ta.atr(atrPeriod)[1])

// Step 2: Take last close price of the previous day
prevClose = request.security(syminfo.tickerid, "D", close[1])

// Step 3: Calculate the target range based on a 1:2 Risk/Reward ratio
targetRange = prevATR

// Step 4: Initialize variables for the high and low of the 15-minute range
var float high15min = na
var float low15min = na

// Step 5: Track the number of 5-minute candles passed
var int candlesPassed = 0

// Step 6: Plot horizontal rays from the 5-minute candle high and low after the first 3 candles
var line highRay = na
var line lowRay = na

// Step 6: Track the high and low during the first 15 minutes
if (ta.change(time("D")) != 0)  // New day detected
    high15min := na
    low15min := na
    candlesPassed := 0

if (ta.change(time("5")) != 0)  // New 5-minute candle detected
    candlesPassed := candlesPassed + 1
    if (candlesPassed == 1)
        // Initialize high and low with the first 5-minute candle
        high15min := high
        low15min := low
    else if (candlesPassed > 1 and candlesPassed <= 3)
        // Update high and low with subsequent 5-minute candles
        high15min := math.max(high15min, high)
        low15min := math.min(low15min, low)
    else if (candlesPassed == 4)
        // Plot lines after the first 15 minutes (i.e., after 3 five-minute candles)
        highRay := line.new(x1=bar_index - 3, y1=high15min, x2=bar_index + 27, y2=high15min, color=color.green, width=2)
        lowRay := line.new(x1=bar_index - 3, y1=low15min, x2=bar_index + 27, y2=low15min, color=color.red, width=2)

range15min = high15min - low15min

// Step 7: Check if the current 15-minute range is less than half of ATR and plot the label
if (candlesPassed == 4)
    rangeValue = targetRange / range15min
    roundedRangeValue = math.round(rangeValue * 100) / 100
    labelText = (roundedRangeValue >= 3 ? "YES " : "NO ") + str.tostring(roundedRangeValue)
    label.new(x=bar_index, y=high15min, text=labelText, 
              color=color.white, style=label.style_label_down, textcolor=color.blue, size=size.normal)

              
// --- CP2: Mark Buy & Sell Candidate Candles ---

// Calculate EMAs
ema5 = ta.ema(close, 5)
ema9 = ta.ema(close, 9)
ema50 = ta.ema(close, 50)

// Calculate RSI
rsi = ta.rsi(close, 14)

// Function to check if the last n candles closed above a specific EMA
is_above_ema(candles, ema) =>
    is_above = true
    for i = 0 to candles - 1
        is_above := is_above and (close[i] > ema[i])
    is_above

// Function to check if the last n candles closed below a specific EMA
is_below_ema(candles, ema) =>
    is_below = true
    for i = 0 to candles - 1
        is_below := is_below and (close[i] < ema[i])
    is_below

// Calculate intraday session start for 9th 5-minute candle
current_time = timestamp("0000-01-01 09:15") + (9 * 5 * 60 * 1000)
is_after_9th_candle = (timenow > current_time)

// --- Buy Candidate Candle Logic ---
// Check if last 5 candles closed above 5 EMA
above5EMA = is_above_ema(5, ema5)

// Check if last 9 candles closed above 9 EMA
above9EMA = is_above_ema(9, ema9)

// Define the buy candidate candle
buyCandidateCandle = (above5EMA and above9EMA)

// Add the edge condition (last 9th candle above 50 EMA and RSI of buy candidate candle > 60)
buyMarkCandle = buyCandidateCandle and (close[8] > ema50[8]) and (rsi > 60)

// Only start checking after the 9th 5-minute candle of the day for buy signals
buyFinalMark = buyMarkCandle and is_after_9th_candle

// Plot a small green triangle above the bar for buy signals if all conditions are met
plotshape(series=buyFinalMark, location=location.abovebar, color=color.green, size=size.small, style=shape.triangledown)


// --- Sell Candidate Candle Logic ---
// Check if last 5 candles closed below 5 EMA
below5EMA = is_below_ema(5, ema5)

// Check if last 9 candles closed below 9 EMA
below9EMA = is_below_ema(9, ema9)

// Define the sell candidate candle
sellCandidateCandle = (below5EMA and below9EMA)

// Add the edge condition (last 9th candle below 50 EMA and RSI of sell candidate candle < 30)
sellMarkCandle = sellCandidateCandle and (close[8] < ema50[8]) and (rsi < 30)

// Only start checking after the 9th 5-minute candle of the day for sell signals
sellFinalMark = sellMarkCandle and is_after_9th_candle

// Plot a small red triangle below the bar for sell signals if all conditions are met
plotshape(series=sellFinalMark, location=location.belowbar, color=color.red, size=size.small, style=shape.triangledown)
